syntax = "proto3";

package admin.pbmarket;

option go_package = "server/proto/v1/admin.pbmarket";

import "google/api/annotations.proto";
import "server/types/types.proto";

service Api {
  rpc GetPrice (GetRequestPrice) returns (ResponsePrice) {
    option (google.api.http) = {
      post: "/v1/admin/market/get-price",
      body: "*"
    };
  }
  rpc SetAsset (SetRequestAsset) returns (ResponseAsset) {
    option (google.api.http) = {
      post: "/v1/admin/market/set-asset",
      body: "*"
    };
  }
  rpc GetAsset (GetRequestAsset) returns (ResponseAsset) {
    option (google.api.http) = {
      post: "/v1/admin/market/get-asset",
      body: "*"
    };
  }
  rpc GetAssets (GetRequestAssets) returns (ResponseAsset) {
    option (google.api.http) = {
      post: "/v1/admin/market/get-assets",
      body: "*"
    };
  }
  rpc DeleteAsset (DeleteRequestAsset) returns (ResponseAsset) {
    option (google.api.http) = {
      post: "/v1/admin/market/delete-asset",
      body: "*"
    };
  }
  rpc GetPairs (GetRequestPairs) returns (ResponsePair) {
    option (google.api.http) = {
      post: "/v1/admin/market/get-pairs",
      body: "*"
    };
  }
  rpc GetPair (GetRequestPair) returns (ResponsePair) {
    option (google.api.http) = {
      post: "/v1/admin/market/get-pair",
      body: "*"
    };
  }
  rpc SetPair (SetRequestPair) returns (ResponsePair) {
    option (google.api.http) = {
      post: "/v1/admin/market/set-pair",
      body: "*"
    };
  }
  rpc DeletePair (DeleteRequestPair) returns (ResponsePair) {
    option (google.api.http) = {
      post: "/v1/admin/market/delete-pair",
      body: "*"
    };
  }
}

// Price structure.
message GetRequestPrice {
  string base_unit = 1;
  string quote_unit = 2;
}
message ResponsePrice {
  double price = 1;
}

// Assets structure.
message GetRequestAssets {
  string search = 1;
  int64 limit = 2;
  int64 page = 3;
  string type = 4;
}
message GetRequestAsset {
  string symbol = 1;
}
message SetRequestAsset {
  string symbol = 1;
  bytes image = 2;
  types.Asset asset = 3;
}
message DeleteRequestAsset {
  string symbol = 1;
}
message ResponseAsset {
  repeated types.Asset fields = 1;
  string address = 2;
  bool success = 3;
  int32 count = 4;
}

// Pair structure.
message GetRequestPairs {
  int64 limit = 1;
  int64 page = 2;
  string search = 3;
  string type = 4;
}
message GetRequestPair {
  int64 id = 1;
}
message SetRequestPair {
  int64 id = 1;
  types.Pair pair = 2;
}
message DeleteRequestPair {
  int64 id = 1;
}
message ResponsePair {
  repeated types.Pair fields = 1;
  int32 count = 2;
  bool success = 3;
}